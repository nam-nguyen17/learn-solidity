{
  "address": "0x69B7AFE3B1953eef3AC257e600081203AAF47903",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheeperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x440fc070bb9b3f0822a418f31b9ce0160160ec24cb3a4c97ef402826a91af302",
  "receipt": {
    "to": null,
    "from": "0x8C025238aAf9241060422ed1e4DfB2bD45fACD5F",
    "contractAddress": "0x69B7AFE3B1953eef3AC257e600081203AAF47903",
    "transactionIndex": 19,
    "gasUsed": "1090508",
    "logsBloom": "0x
    "blockHash": "0x10a4229c2874d78fb3c7c36e38d50b02fc2bcbfa7c2b746985378cf997a4e2f3",
    "transactionHash": "0x440fc070bb9b3f0822a418f31b9ce0160160ec24cb3a4c97ef402826a91af302",
    "logs": [],
    "blockNumber": 10902745,
    "cumulativeGasUsed": "3456936",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "7a8e0571c9101a590e73e0846e5ee221",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheeperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Namnguyen\",\"details\":\"This implements price feed as our library.\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"The address to get the amount funded for.\"},\"returns\":{\"_0\":\"The amount funded for the address.\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded.\"}},\"notice\":\"This contract is used to fund a project.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A sample Funding Contract\\n    @author Namnguyen\\n    @notice This contract is used to fund a project.\\n    @dev This implements price feed as our library.\\n */\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    mapping(address => uint256) private s_addressesToAmountFunded;\\n    address[] private s_funders;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Minimum USD amount is 50\\\"\\n        );\\n        s_addressesToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressesToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n\\n        require(callSuccess, \\\"Withdrawal failed\\\");\\n    }\\n\\n    function cheeperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressesToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Withdrawal failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /** @notice Gets the amount that an address has funded.\\n     * @param fundingAddress The address to get the amount funded for.\\n     * @return The amount funded for the address.\\n     */\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressesToAmountFunded[fundingAddress];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x2bb25abb75347e20120ffc9be7e95959f7722b11a6e4a4b9ee3b43dc03854867\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x64a23cac0c4c2ea9cbc7069db9f150c28a08cff2b4f7d8bd757b3b07288ceb26\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013db380380620013db8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61125c6200017f6000396000818161045a015281816106a901526106f9015261125c6000f3fe60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063893d20e81461017d5780639e87a5cd146101a8578063a360b935146101d3578063b60d4288146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633a7b6c741461010b5780633ccfd60b1461014857610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b87565b610321565b6040516100d79190610daa565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610daa565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d9190610bb4565b610410565b60405161013f9190610d34565b60405180910390f35b610150610458565b005b34801561015e57600080fd5b50610167610698565b6040516101749190610daa565b60405180910390f35b34801561018957600080fd5b506101926106a5565b60405161019f9190610d34565b60405180910390f35b3480156101b457600080fd5b506101bd6106cd565b6040516101ca9190610d4f565b60405180910390f35b6101db6106f7565b005b6101e56101e7565b005b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461099b90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d6a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610de1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610be1565b905090565b60006001828154811061042657610425611112565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105885760006001828154811061050357610502611112565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105809061106b565b9150506104e0565b50600067ffffffffffffffff8111156105a4576105a3611141565b5b6040519080825280602002602001820160405280156105d25781602001602082028036833780820191505090505b50600190805190602001906105e8929190610a77565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161060f90610d1f565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b5050905080610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90610d8a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561080057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b6575b5050505050905060005b815181101561088a57600082828151811061082857610827611112565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806108829061106b565b91505061080a565b50600067ffffffffffffffff8111156108a6576108a5611141565b5b6040519080825280602002602001820160405280156108d45781602001602082028036833780820191505090505b50600190805190602001906108ea929190610a77565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161091190610d1f565b60006040518083038185875af1925050503d806000811461094e576040519150601f19603f3d011682016040523d82523d6000602084013e610953565b606091505b5050905080610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610d8a565b60405180910390fd5b5050565b6000806109a7836109d7565b90506000670de0b6b3a764000085836109c09190610f7f565b6109ca9190610e37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190610c0e565b5050509150506402540be40081610a6f9190610e68565b915050919050565b828054828255906000526020600020908101928215610af0579160200282015b82811115610aef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a97565b5b509050610afd9190610b01565b5090565b5b80821115610b1a576000816000905550600101610b02565b5090565b600081359050610b2d816111ca565b92915050565b600081519050610b42816111e1565b92915050565b600081359050610b57816111f8565b92915050565b600081519050610b6c816111f8565b92915050565b600081519050610b818161120f565b92915050565b600060208284031215610b9d57610b9c611170565b5b6000610bab84828501610b1e565b91505092915050565b600060208284031215610bca57610bc9611170565b5b6000610bd884828501610b48565b91505092915050565b600060208284031215610bf757610bf6611170565b5b6000610c0584828501610b5d565b91505092915050565b600080600080600060a08688031215610c2a57610c29611170565b5b6000610c3888828901610b72565b9550506020610c4988828901610b33565b9450506040610c5a88828901610b5d565b9350506060610c6b88828901610b5d565b9250506080610c7c88828901610b72565b9150509295509295909350565b610c9281610fd9565b82525050565b610ca181611035565b82525050565b6000610cb4600083610dc5565b9150610cbf82611175565b600082019050919050565b6000610cd7601883610dd0565b9150610ce282611178565b602082019050919050565b6000610cfa601183610dd0565b9150610d05826111a1565b602082019050919050565b610d1981611015565b82525050565b6000610d2a82610ca7565b9150819050919050565b6000602082019050610d496000830184610c89565b92915050565b6000602082019050610d646000830184610c98565b92915050565b60006020820190508181036000830152610d8381610cca565b9050919050565b60006020820190508181036000830152610da381610ced565b9050919050565b6000602082019050610dbf6000830184610d10565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610dec82611015565b9150610df783611015565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2c57610e2b6110b4565b5b828201905092915050565b6000610e4282611015565b9150610e4d83611015565b925082610e5d57610e5c6110e3565b5b828204905092915050565b6000610e7382610feb565b9150610e7e83610feb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ebd57610ebc6110b4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610efa57610ef96110b4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f3757610f366110b4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f7457610f736110b4565b5b828202905092915050565b6000610f8a82611015565b9150610f9583611015565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fce57610fcd6110b4565b5b828202905092915050565b6000610fe482610ff5565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104082611047565b9050919050565b600061105282611059565b9050919050565b600061106482610ff5565b9050919050565b600061107682611015565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a9576110a86110b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4d696e696d756d2055534420616d6f756e742069732035300000000000000000600082015250565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6111d381610fd9565b81146111de57600080fd5b50565b6111ea81610feb565b81146111f557600080fd5b50565b61120181611015565b811461120c57600080fd5b50565b6112188161101f565b811461122357600080fd5b5056fea264697066735822122023e5ae8c1d3a3afe270134ccf1e4b89daaf80c0718c461a3b4624fc933f07e7a64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636b69a592116100595780636b69a59214610152578063893d20e81461017d5780639e87a5cd146101a8578063a360b935146101d3578063b60d4288146101dd57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633a7b6c741461010b5780633ccfd60b1461014857610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b87565b610321565b6040516100d79190610daa565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610daa565b60405180910390f35b34801561011757600080fd5b50610132600480360381019061012d9190610bb4565b610410565b60405161013f9190610d34565b60405180910390f35b610150610458565b005b34801561015e57600080fd5b50610167610698565b6040516101749190610daa565b60405180910390f35b34801561018957600080fd5b506101926106a5565b60405161019f9190610d34565b60405180910390f35b3480156101b457600080fd5b506101bd6106cd565b6040516101ca9190610d4f565b60405180910390f35b6101db6106f7565b005b6101e56101e7565b005b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461099b90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d6a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610de1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610be1565b905090565b60006001828154811061042657610425611112565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dd576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105885760006001828154811061050357610502611112565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105809061106b565b9150506104e0565b50600067ffffffffffffffff8111156105a4576105a3611141565b5b6040519080825280602002602001820160405280156105d25781602001602082028036833780820191505090505b50600190805190602001906105e8929190610a77565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161060f90610d1f565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b5050905080610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90610d8a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561080057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b6575b5050505050905060005b815181101561088a57600082828151811061082857610827611112565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806108829061106b565b91505061080a565b50600067ffffffffffffffff8111156108a6576108a5611141565b5b6040519080825280602002602001820160405280156108d45781602001602082028036833780820191505090505b50600190805190602001906108ea929190610a77565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161091190610d1f565b60006040518083038185875af1925050503d806000811461094e576040519150601f19603f3d011682016040523d82523d6000602084013e610953565b606091505b5050905080610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610d8a565b60405180910390fd5b5050565b6000806109a7836109d7565b90506000670de0b6b3a764000085836109c09190610f7f565b6109ca9190610e37565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2057600080fd5b505afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190610c0e565b5050509150506402540be40081610a6f9190610e68565b915050919050565b828054828255906000526020600020908101928215610af0579160200282015b82811115610aef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a97565b5b509050610afd9190610b01565b5090565b5b80821115610b1a576000816000905550600101610b02565b5090565b600081359050610b2d816111ca565b92915050565b600081519050610b42816111e1565b92915050565b600081359050610b57816111f8565b92915050565b600081519050610b6c816111f8565b92915050565b600081519050610b818161120f565b92915050565b600060208284031215610b9d57610b9c611170565b5b6000610bab84828501610b1e565b91505092915050565b600060208284031215610bca57610bc9611170565b5b6000610bd884828501610b48565b91505092915050565b600060208284031215610bf757610bf6611170565b5b6000610c0584828501610b5d565b91505092915050565b600080600080600060a08688031215610c2a57610c29611170565b5b6000610c3888828901610b72565b9550506020610c4988828901610b33565b9450506040610c5a88828901610b5d565b9350506060610c6b88828901610b5d565b9250506080610c7c88828901610b72565b9150509295509295909350565b610c9281610fd9565b82525050565b610ca181611035565b82525050565b6000610cb4600083610dc5565b9150610cbf82611175565b600082019050919050565b6000610cd7601883610dd0565b9150610ce282611178565b602082019050919050565b6000610cfa601183610dd0565b9150610d05826111a1565b602082019050919050565b610d1981611015565b82525050565b6000610d2a82610ca7565b9150819050919050565b6000602082019050610d496000830184610c89565b92915050565b6000602082019050610d646000830184610c98565b92915050565b60006020820190508181036000830152610d8381610cca565b9050919050565b60006020820190508181036000830152610da381610ced565b9050919050565b6000602082019050610dbf6000830184610d10565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610dec82611015565b9150610df783611015565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2c57610e2b6110b4565b5b828201905092915050565b6000610e4282611015565b9150610e4d83611015565b925082610e5d57610e5c6110e3565b5b828204905092915050565b6000610e7382610feb565b9150610e7e83610feb565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ebd57610ebc6110b4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610efa57610ef96110b4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f3757610f366110b4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f7457610f736110b4565b5b828202905092915050565b6000610f8a82611015565b9150610f9583611015565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fce57610fcd6110b4565b5b828202905092915050565b6000610fe482610ff5565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104082611047565b9050919050565b600061105282611059565b9050919050565b600061106482610ff5565b9050919050565b600061107682611015565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a9576110a86110b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4d696e696d756d2055534420616d6f756e742069732035300000000000000000600082015250565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6111d381610fd9565b81146111de57600080fd5b50565b6111ea81610feb565b81146111f557600080fd5b50565b61120181611015565b811461120c57600080fd5b50565b6112188161101f565b811461122357600080fd5b5056fea264697066735822122023e5ae8c1d3a3afe270134ccf1e4b89daaf80c0718c461a3b4624fc933f07e7a64736f6c63430008070033",
  "devdoc": {
    "author": "Namnguyen",
    "details": "This implements price feed as our library.",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "The address to get the amount funded for."
        },
        "returns": {
          "_0": "The amount funded for the address."
        }
      }
    },
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded."
      }
    },
    "notice": "This contract is used to fund a project.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressesToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}